#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    combos {
        compatible = "zmk,combos";

        bootloader {
            bindings = <&bootloader>;
            key-positions = <1 3 4>;
        };

        bt_nxt {
            bindings = <&bt BT_NXT>;
            key-positions = <32 0>;
        };

        bt_clr {
            bindings = <&bt BT_CLR>;
            key-positions = <0 36>;
        };
    };

    behaviors {
        mt_left: mt_left {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <175>;
            hold-trigger-key-positions = <5 15 25 26 27 34 35 6 7 8 16 17 18 26 27 28 9 19 29 33 40 41 42 43>;
            hold-trigger-on-release;
        };

        mt_right: mt_right {
            compatible = "zmk,behavior-hold-tap";
            label = "MT_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <175>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 36 37 38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp Q                &kp W                &kp E                  &kp R             &kp T    &kp Y      &kp U                      &kp I                    &kp O                  &kp P
  &mt_left LEFT_WIN A  &mt_left LEFT_ALT S  &mt_left LEFT_SHIFT D  &mt_left LCTRL F  &kp G    &kp H      &mt_right RIGHT_CONTROL J  &mt_right RIGHT_SHIFT K  &mt_right RIGHT_ALT L  &mt_right RIGHT_GUI SEMICOLON
  &kp Z                &kp X                &kp C                  &kp V             &kp B    &kp N      &kp M                      &kp COMMA                &kp DOT                &kp SLASH
  &kp LEFT             &kp RIGHT                                                                                                                             &kp TAB                &kp DELETE
  &kp UP_ARROW         &kp DOWN             &kp ESCAPE             &mo 2             &mo 1    &kp ENTER  &kp SPACE                  &mo 1                    &mo 2                  &kp BACKSPACE
            >;
        };

        layer_1 {
            bindings = <
  &kp NUMBER_1      &kp NUMBER_2          &kp NUMBER_3    &kp NUMBER_4  &kp NUMBER_5    &kp NUMBER_6    &kp NUMBER_7  &kp NUMBER_8     &kp NUMBER_9           &kp NUMBER_0
  &trans            &trans                &trans          &trans        &kp PLUS        &kp MINUS       &trans        &trans           &trans                 &trans
  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp LEFT_BRACE  &kp EQUAL     &kp APOS        &kp UNDERSCORE  &kp DOLLAR    &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET
  &trans            &trans                                                                                                             &trans                 &trans
  &trans            &trans                &trans          &trans        &trans          &trans          &trans        &trans           &trans                 &trans
            >;
        };

        layer_2 {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &kp HASH  &trans    &trans        &trans     &bootloader
  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans        &trans     &trans
  &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans
  &trans  &trans                                                              &trans     &trans
  &trans  &trans  &trans  &trans  &trans    &trans    &trans    &trans        &trans     &trans
            >;
        };

        /* Commented out additional layers for now - will add back later
        lower_layer {
            bindings = <
                &kp N1 &kp N2 &kp N3 &kp N4 &kp N5                             &kp N6   &kp N7   &kp N8   &kp N9   &kp N0
                &kp F1 &kp F2 &kp F3 &kp F4 &kp F5                             &kp F6   &kp F7   &kp F8   &kp F9   &kp F10
                &trans &trans &trans &trans &trans                             &trans   &trans   &kp F11  &kp F12  &trans
                       &trans &trans &trans                                     &trans   &trans
                       &trans &trans &trans &trans                             &trans   &trans
                                                                              &trans
            >;
        };

        raise_layer {
            bindings = <
                &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT                     &kp CARET &kp AMPS &kp ASTRK &kp LPAR &kp RPAR
                &trans   &trans &trans   &trans   &trans                        &kp LEFT  &kp DOWN &kp UP    &kp RIGHT &trans
                &trans   &trans &trans   &trans   &trans                        &kp HOME  &kp PG_DN &kp PG_UP &kp END  &kp PIPE
                         &trans &trans   &trans                                 &trans    &trans
                         &trans &trans   &trans &trans                         &trans    &trans
                                                                               &trans
            >;
        };

        adjust_layer {
            bindings = <
                &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3    &trans &trans &trans &trans &trans
                &out OUT_TOG &trans     &trans       &trans       &trans           &trans &trans &trans &trans &trans
                &trans       &trans     &trans       &trans       &trans           &trans &trans &trans &trans &trans
                             &trans     &trans       &trans                        &trans &trans
                             &trans     &trans       &trans &trans                 &trans &trans
                                                                                   &trans
            >;
        };
        */
    };
};
